function [ F ] = sevenpoint( pts1, pts2, M )
% sevenpoint:
%   pts1 - Nx2 matrix of (x,y) coordinates
%   pts2 - Nx2 matrix of (x,y) coordinates
%   M    - max (imwidth, imheight)

% Q2.2 - Todo:
%     Implement the eightpoint algorithm
%     Generate a matrix F from some '../data/some_corresp.mat'
%     Save recovered F (either 1 or 3 in cell), M, pts1, pts2 to q2_2.mat

%     Write recovered F and display the output of displayEpipolarF in your writeup
pts1n = pts1/M;
pts2n = pts2/M;
x1=pts1n(:,1);
y1=pts1n(:,2);
x2=pts2n(:,1);
y2=pts2n(:,2);
n=length(pts1n);

A=[ x1.*x2 x1.*y2 x1 y1.*x2 y1.*y2 y1 x2 y2 ones(n,1) ] ;
[u s v]=svd(A);

F1=v(:,end-1);
F2=v(:,end);
F1=reshape(F1,3,3)';
F2=reshape(F2,3,3)';

[u1 s1 v1]=svd(F1);
F1=u1*diag([s1(1),s1(5),0])*v1';
[u2 s2 v2]=svd(F2);
F2=u2*diag([s2(1),s2(5),0])*v2';

old=digits(4);
syms a;
P=vpa(solve(det(a*F1+(1-a)*F2)==0,'a'));
% 
% F=P(1)*F1+(1-P(1))*F2;
% T=[1/M 0 0; 0 1/M 0; 0 0 1];
% F=T'*F*T;
% 
% T=[1/M 0 0; 0 1/M 0; 0 0 1];
% F=cell(1,3);
% for i=1:3
%     f=P(i)*F1+(1-P(i))*F2;
%     F{i}=T'*f*T;
% end
    
F=cell(1);
for i=1:length(P)
    isreal(P(i))
    if isreal(P(i))
        f=P(i)*F1+(1-P(i))*F2;
        T=[1/M 0 0; 0 1/M 0; 0 0 1];
        F{length;
    end
end

end

